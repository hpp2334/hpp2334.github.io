[{"title":"Promise | Promise的简易实现","date":"2020-05-21T12:56:59.000Z","path":"2020/05/21/20200521_promise-implementation/","text":"Cover 前言本文将简述Promise的作用，并较为详细的讲述基于Promise/A+规范实现一个简易的Promise，在其中会加入个人的一些理解（当然只是学习前端两个月的萌新 QAQ）。 以下是一些参考资料： Promise: https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise Promises/A+: https://promisesaplus.com/ 什么是PromisePromise的简易实现说明2.1 Promise States状态取值Promise的状态（Promise States）有三种取值：pending, fulfilled, rejected。 { 2.1 } 状态为fulfileed的Promise有一个值value，状态为rejected的Promise有一个值reason，value和reason都是不可改变的。（此处不可改变指的是JavaScript中的===成立，而不是深层次的比较，也就是说内部属性值是可以改变的，如同一个对象从{a: 1}变为了{a: 0}） { 2.1.2, 2.1.3 } 一般，fulfilled是Promise成功时的状态取值，value可认为是成功时Promise内部计算得到的值；rejected是Promise失败时的状态取值，reason可以认为是Promise失败的原因。 此部分代码与下一部分合并。 状态转变一个处于pending状态的Promise，成功时转变为fulfilled，失败时转变为rejected。并且，一个状态为fulfilled或rejected的Promise不能转变为其他状态。 这里来看看代码如何实现当前的部分。到此处，稍微难一些的点只在于状态转变与保持value与reason不变。 可以实现Promise.prototype[FUNC_FULFILL]方法实现到fulfilled状态的转变，Promise.prototype[FUNC_REJECT]方法实现到rejected状态的转变，在两个方法内部都先判定以下状态是不是pending，是才修改状态，设置value或reason。我们只通过上述两个方法实现Promise的状态转变，由于状态的判定和设置，易知对于同一个Promise，当两个方法中的一个执行了内部逻辑，以后两个方法的内部逻辑都不会被执行。于是，两个稍微难一些的目标就能够简单的达成。 1234567891011121314151617181920212223242526// 2.1 Promise Statesconst [ FULFILLED, PENDING, REJECTED ] = [ 'FULFILLED', 'PENDING', 'REJECTED' ];function Promise () &#123; this.status = PENDING; // 2.1 Promise States this.value = null; // 2.1.2.2 must have a value, which must not change. this.reason = null; // 2.1.3.2 must have a reason, which must not change.&#125;Promise.prototype[FUNC_FULFILL] = function (value) &#123; // 2.1.1.1 When pending, a promise: may transition to either the fulfilled or rejected state. // 2.1.2.1 When fulfilled, a promise: must not transition to any other state. if (this.status === PENDING) &#123; this.status = FULFILLED; this.value = value; &#125;&#125;Promise.prototype[FUNC_REJECT] = function (reason) &#123; // 2.1.3.1 must not transition to any other state. // 2.1.3.2 must have a reason, which must not change. if (this.status === PENDING) &#123; this.status = REJECTED; this.reason = reason; &#125;&#125;","tags":[{"name":"JavaScript Basic","slug":"JavaScript-Basic","permalink":"http://hpp2334.github.io/tags/JavaScript-Basic/"}]}]